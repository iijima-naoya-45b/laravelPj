# HTTPからHTTPSへのリダイレクト設定
server {
    listen 80;
    server_name localhost;

    # HTTPをHTTPSへリダイレクト
    # return 301 https://$host$request_uri;
}

# HTTPS設定
server {
    listen 443 ssl http2;
    server_name localhost;
    root /var/www/src/new-laravel/public;

    # SSL証明書のパス指定
    ssl_certificate /etc/nginx/ssl/self-signed.crt;
    ssl_certificate_key /etc/nginx/ssl/self-signed.key;

    # セキュリティヘッダー
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Strict-Transport-Security "max-age=0" always;  # HSTS無効化

    index index.php;
    error_log /var/www/error.log warn;
    access_log /var/www/access.log combined;
    charset utf-8;

    # CORS ヘッダー（すべてのリクエストに追加）
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
    add_header Strict-Transport-Security "max-age=0" always;  # HSTS無効化

    # プリフライトリクエストの処理
    location / {
        # OPTIONS メソッドを処理し、CORS ヘッダーを返す
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            add_header Strict-Transport-Security "max-age=0" always;  # HSTS無効化
            return 204;
        }

        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
