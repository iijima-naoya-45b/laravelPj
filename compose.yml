version: "3.9"

services:
  # PHPコンテナ
  app:
    build:
      context: .
      dockerfile: ./.docker/app/Dockerfile
    working_dir: /var/www/src
    depends_on:
      - db
    volumes:
      - type: bind
        source: ./src
        target: /var/www/src
    # 依存するサービスとして 'db' を指定
    # ソースコードをバインドマウント

  # Nginxコンテナ
  web:
    build:
      context: .
      dockerfile: ./.docker/web/Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    volumes:
      - type: bind
        source: ./.docker/web/default.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./.docker/web/ssl
        target: /etc/nginx/ssl
      - type: bind
        source: ./src
        target: /var/www/src
    # ポート80と443をホストに公開
    # 依存するサービスとして 'app' を指定
    # Nginx設定ファイルとSSLをバインドマウント

  # MySQLコンテナ
  db:
    build:
      context: .
      dockerfile: ./.docker/db/Dockerfile
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      TZ: Asia/Tokyo
    volumes:
      - type: volume
        source: db
        target: /var/lib/mysql
      - type: bind
        source: ./.docker/db/my.conf
        target: /etc/my.conf
      - type: bind
        source: ./.docker/db/init.sql
        target: /docker-entrypoint-initdb.d/init.sql
    # ポート3306をホストに公開
    # 環境変数でMySQLの設定を行う
    # データボリュームと設定ファイル、初期化スクリプトをバインドマウント

  # フロントエンドコンテナ（Next.js）
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./frontend
        target: /app
    depends_on:
      - app
    # ポート3000をホストに公開
    # 依存するサービスとして 'app' を指定
    # フロントエンドのソースコードをバインドマウント

volumes:
  db:
    # データベースデータの永続化に使用するボリューム
